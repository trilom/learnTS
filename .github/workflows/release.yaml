 # if a push comes in then this will a release PR if needed
name: Push to release branches
on:
  push:
    branches: [master, next, alpha, beta]
    tags-ignore: ['**']
jobs:
  # semantic release to github package repo, npm, github actions
  release:
    name: Release to NPM, Github, Github Actions Marketplace
    runs-on: ubuntu-latest
    needs: [build, test-unit, test-integration]
    if: github.actor != 'semantic-release-bot'
    env:
      GITHUB_TOKEN: ${{ secrets.TRILOM_BOT_TOKEN }}
      SEMANTIC_RELEASE_PACKAGE: '@${{ github.repository }}'
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - run: yarn build-release
      - name: semantic-release
        uses: cycjimmy/semantic-release-action@v2
        id: semantic
        with:
          semantic_version: 15.14.0
          extra_plugins: |
            @semantic-release/git@7.0.18
            @semantic-release/changelog
            semantic-release-slack-bot
          dry_run: false
      - name: Setup Node.js with GitHub Package Registry
        if: steps.semantic.outputs.new_release_published == 'true'
        uses: actions/setup-node@v1
        with:
          node-version: 12
          registry-url: 'https://npm.pkg.github.com'
          scope: trilom
      - name: Publish To GitHub Package Registry
        if: steps.semantic.outputs.new_release_published == 'true'
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ env.GITHUB_TOKEN }}
      # deploy to AWS
  # make sure we can build
  build:
    name: yarn install && tsc
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: yarn build
  # unit test with jest
  test-unit:
    name: jest unit tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: yarn build
      - run: yarn test
  # integration test with jest
  test-integration:
    name: jest integration tests
    needs: test-unit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: yarn build
      - run: yarn test-integration